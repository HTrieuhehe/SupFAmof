<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SupFAmof.API</name>
    </assembly>
    <members>
        <member name="M:SupFAmof.API.Controllers.AccountBannedController.GetAccountBannedByToken(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Account Banned 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountCertificateController.GetAccountCertificateById(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Account Certificate by Token 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.GetAccountById(System.Int32)">
            <summary>
            Get Account By Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.GetAccountByToken">
            <summary>
            Get Account By Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.UpdateAccount(SupFAmof.Service.DTO.Request.Account.UpdateAccountRequest)">
            <summary>
            Update Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.CreateAccountInformation(SupFAmof.Service.DTO.Request.Account.CreateAccountInformationRequest)">
            <summary>
            Create Account Information
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.LoginGoogle(SupFAmof.Service.DTO.Request.ExternalAuthRequest)">
            <summary>
            Google Login
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.DisableAccount">
            <summary>
            Disable Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.UpdateAccountAvatar(SupFAmof.Service.DTO.Request.Account.UpdateAccountAvatar)">
            <summary>
            Update Account ImgUrl
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.Logout(System.String)">
            <summary>
            logout 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.EnableProfile">
            <summary>
            Enable Account 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountController.InputVeryfication(System.Int32)">
            <summary>
            Input Verification
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountReportController.GetAccountReportbyToken(SupFAmof.Service.DTO.Response.AccountReportResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Account Report by Token
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AccountReportController.GetPostRegistrationByAccountReportId(System.Int32)">
            <summary>
            Get PostRegistration by Account Report Id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdminController.AdministrationAccountController.Login(SupFAmof.Service.DTO.Request.LoginRequest)">
            <summary>
            Administration Login 
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdminController.AdministrationAccountController.GetAdmins(SupFAmof.Service.DTO.Response.Admin.AdminAccountResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get List Administrators    
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdminController.AdministrationAccountController.GetAdminById">
            <summary>
            Get Administrators By Id
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdminController.AdministrationAccountController.CreateAdminManager(SupFAmof.Service.DTO.Request.Staff.CreateAdminAccountRequest)">
            <summary>
            Create Admin Account                        
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdminController.AdministrationAccountController.UpdateAdmin(SupFAmof.Service.DTO.Request.Staff.UpdateAdminAccountRequest)">
            <summary>
            Update Administrators 
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountCertificateController.CreateAccountCertificate(SupFAmof.Service.DTO.Request.Admission.CreateAccountCertificateRequest)">
            <summary>
            Create Account Certificate 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountCertificateController.UpdateAccountCertificate(System.Int32,System.Int32)">
            <summary>
            Update Account Certificate 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountCertificateController.GetAccountCertificates(SupFAmof.Service.DTO.Response.AccountCertificateResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Account Certificates 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountCertificateController.GetAccountCertificateById(System.Int32)">
            <summary>
            Get Account Certificate By Id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.GetAccountByToken">
            <summary>
            Get Account By Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.UpdateAccount(SupFAmof.Service.DTO.Request.Admission.AccountRequest.UpdateAdmissionAccountRequest)">
            <summary>
            Update Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.UpdateAccount(SupFAmof.Service.DTO.Request.Account.UpdateAccountAvatar)">
            <summary>
            Update Account Avatar
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.LoginGoogle(SupFAmof.Service.DTO.Request.ExternalAuthRequest)">
            <summary>
            Google Login
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.DisableAccount">
            <summary>
            Disable Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.Logout(System.String)">
            <summary>
            logout 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.EnableProfile">
            <summary>
            Enable Account 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionAccountController.InputVeryfication(System.Int32)">
            <summary>
            Input Verification
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionBanAccountController.CreateAccountBanned(SupFAmof.Service.DTO.Request.Admission.CreateAccountBannedRequest)">
            <summary>
            Create Account Banned 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionBanAccountController.UpdateAccountBanned(System.Int32,SupFAmof.Service.DTO.Request.Admission.UpdateAccountBannedRequest)">
            <summary>
            Update Account Banned 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionBanAccountController.GetAccountBanneds(SupFAmof.Service.DTO.Response.Admission.AccountBannedResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Account Banned 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionContractController.GetAdmissionContracts(SupFAmof.Service.DTO.Response.Admission.AdmissionContractResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Contracts
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionContractController.GetAdmissionContractById(System.Int32)">
            <summary>
            Get Contract By id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionContractController.AdmissionSearchContract(System.String,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Contract By id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionContractController.CreateAdmissionContract(SupFAmof.Service.DTO.Request.Admission.CreateAdmissionContractRequest)">
            <summary>
            Get Contract By id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionContractController.UpdateAdmissionContract(System.Int32,SupFAmof.Service.DTO.Request.Admission.UpdateAdmissionContractRequest)">
            <summary>
            Get Contract By id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionDocumentController.GetAllDocument(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get All Document
            </summary>
            <remarks>
            true 
            </remarks>
            <response code="200">Get All</response>
            <response code="400">Failed to retrieve any information</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionDocumentController.CreateDocument(SupFAmof.Service.DTO.Request.DocumentRequest)">
            <summary>
            Create Document
            </summary>
            <remarks>
            true 
            </remarks>
            <response code="200">Create Success</response>
            <response code="400">Failed to create document</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionDocumentController.UpdateDocument(System.Int32,SupFAmof.Service.DTO.Request.DocumentUpdateRequest)">
            <summary>
            Update Document
            </summary>
            <remarks>
            true 
            </remarks>
            <response code="200">Update Success</response>
            <response code="400">Failed to update any information</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionDocumentController.SearchPostCategory(System.String,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Search Document by Name
            </summary>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionManageCollaboratorController.ViewCollaborator">
            <summary>
            View number of active collaborator account 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostCategoryController.GetPostCategories(SupFAmof.Service.DTO.Response.Admission.PostCategoryResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get List Post Categoryies
            </summary>    
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostCategoryController.GetPostCategoryById(System.Int32)">
            <summary>
            Get Post Category By Id                        
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostCategoryController.CreatePostCategory(SupFAmof.Service.DTO.Request.Admission.CreatePostCategoryRequest)">
            <summary>
            Create Post Category                      
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostCategoryController.UpdatePostCategory(System.Int32,SupFAmof.Service.DTO.Request.Admission.UpdatePostCategoryRequest)">
            <summary>
            Update Post Category                     
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostCategoryController.SearchPostCategory(System.String,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Search Post Category by Description or Type                    
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.CreatePost(SupFAmof.Service.DTO.Request.Admission.CreatePostRequest)">
            <summary>
            Create Post 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.GetPosts(SupFAmof.Service.DTO.Response.Admission.AdmissionPostResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Posts 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.GetPostByPostCode(System.String)">
            <summary>
            Get Post by PostCode
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.GetPostByAccountId(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Post by Account Id
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.ConfirmEndingPost(System.Int32)">
            <summary>
            Confirm ending Post
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.ClosePostRegistration(System.Int32)">
            <summary>
            Confirm running Post
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.UpdatePost(System.Int32,SupFAmof.Service.DTO.Request.Admission.UpdatePostRequest)">
            <summary>
            Update Post
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.SearchPost(System.String,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Post By Code 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.DeletePosition(System.Int32)">
            <summary>
            Delete Post Position 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostController.DeletePost(System.Int32)">
            <summary>
            Delete Post 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostRegistrationController.ApproveRequestUpdate(SupFAmof.Service.DTO.Request.AproveUpdateIdRequest,SupFAmof.Service.DTO.Request.AproveRequest)">
            <summary>
            Approve Request Update for Post Registration
            </summary>
            <remarks>
            true 
            </remarks>
            <param name="list">Assign list Id to update</param>
            <param name="approve"></param>
            <response code="200">Approved success</response>
            <response code="400">Failed to Update</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostRegistrationController.AdmssionPostRegistrations(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get all post registration by post created by admssionId
            </summary>
            <remarks>
            true 
            </remarks>
            <response code="200">Get success</response>
            <response code="400">Failed to get</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostRegistrationController.ApprovePostRegistrationRequest(System.Collections.Generic.List{System.Int32},SupFAmof.Service.DTO.Request.AproveRequest)">
            <summary>
            Approve Join Request Post
            </summary>
            <remarks>
            true 
            </remarks>
            <param name="ids"></param>
            <param name="approve"></param>
            <response code="200">Approved success</response>
            <response code="400">Failed to Update</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionPostRegistrationController.GetAccountByPostPositionId(System.Int32,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Account Register in Post Position
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionTrainingCertificateController.GetTratiningCertificates(SupFAmof.Service.DTO.Response.Admission.TrainingCertificateResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get List Training Certificates
            </summary>    
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionTrainingCertificateController.GetTrainingCertificateById(System.Int32)">
            <summary>
            Get Training Certificates By Id                        
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionTrainingCertificateController.CreateTrainingCertificate(SupFAmof.Service.DTO.Request.Admission.CreateTrainingCertificateRequest)">
            <summary>
            Create Post                       
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionTrainingCertificateController.UpdateTrainingCertificate(System.Int32,SupFAmof.Service.DTO.Request.Admission.UpdateTrainingCertificateRequest)">
            <summary>
            Update Post                        
            </summary>
        </member>
        <member name="M:SupFAmof.API.Controllers.AdmissionController.AdmissionTrainingCertificateController.SearchTrainingCertificate(System.String,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Search Training Ceritificate by Name or Type
            </summary>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.CheckAttendanceController.CheckOut(SupFAmof.Service.DTO.Request.CheckOutRequest)">
            <summary>
            Check out
             </summary>
             
        </member>
        <member name="M:SupFAmof.API.Controllers.ComplaintController.GetAccountReportsByToken(SupFAmof.Service.DTO.Response.CompaintResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
             Get Account Report Problem by token
             </summary>
             
        </member>
        <member name="M:SupFAmof.API.Controllers.ComplaintController.CreateAccountReport(SupFAmof.Service.DTO.Request.CreateAccountReportProblemRequest)">
            <summary>
             Create Account Report Problem 
             </summary>
             
        </member>
        <member name="M:SupFAmof.API.Controllers.ContractController.GetContracts(SupFAmof.Service.DTO.Response.AccountContractResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
             Get All contracts for testing
             </summary>
             
        </member>
        <member name="M:SupFAmof.API.Controllers.ContractController.GetContractsByAccountId(SupFAmof.Service.DTO.Response.AccountContractResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
             Get Contract By Account Id
             </summary>
             
        </member>
        <member name="M:SupFAmof.API.Controllers.NotiHistoryTestController.GetNotificationByToken(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Noti By Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.NotiHistoryTestController.GetNotifications(SupFAmof.Service.DTO.Response.NotificationHistoryResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Noti 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.NotiHistoryTestController.GetNotifications(SupFAmof.Service.DTO.Request.CreateNotificationHistoryRequest)">
            <summary>
            Create Noti 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.PostCategoryController.GetPostCategories(SupFAmof.Service.DTO.Response.Admission.PostCategoryResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get List Post Categoryies
            </summary>    
        </member>
        <member name="M:SupFAmof.API.Controllers.PostController.GetPosts(SupFAmof.Service.DTO.Response.PostResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Posts 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.PostController.SearchPost(System.String,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get Post By Code 
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:SupFAmof.API.Controllers.PostRegistrationController.GetPostRegistrationsByAccountId(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            This action method handles an HTTP GET request to retrieve a list of PostRegistrationResponse objects associated with a specific accountId.
            </summary>
            <param name="accountId">The id of the account for which to retrieve the PostRegistrationResponse objects.</param>
            <returns>
            - 200 OK: Returns a list of PostRegistrationResponse objects associated with the specified accountId.
            - 400 Bad Request: If there is an error while processing the request, an ErrorResponse is thrown and returned as a BadRequest.Including there is no Post Registration.
            </returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.PostRegistrationController.CreatePostRegistration(SupFAmof.Service.DTO.Request.PostRegistrationRequest)">
             <summary>
             This action method handles an HTTP POST request to create a request a PostRegistration objects.
             </summary>
             <param name="request">The PostRegistrationRequest create the PostRegistration objects.</param>
             <remarks>
             Sample request:
            
                 POST /create
                  {
                   "accountId": 5,
                   "schoolBusOption": true,
                   "postRegistrationDetails": [
                     {
                       "postId": 1,
                        "positionId": 1
                     }
                   ]
                   }
            
             </remarks>
             <response code="200">Returns the newly created item</response>
             <response code="400">Failed to create</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.PostRegistrationController.CancelPostRegistration(System.Int32)">
            <summary>
            Cancel Post Registration By Id.
            </summary>
            <param name="postRegistrationId">Id need to be submitted.</param>
            <response code="200">Cancel success</response>
            <response code="400">Failed to Cancel</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.PostRegistrationController.UpdatePostRegistration(System.Int32,SupFAmof.Service.DTO.Request.PostRegistrationUpdateRequest)">
            <summary>
            Update Post Registration By Id.
            </summary>
            <param name="postRegistrationId">Id need to be submitted.</param>
            <param name="request">Update object</param>
                {
                "schoolBusOption": true,
                "postRegistrationDetails": [
                   {
                    "positionId": 0
                   }
                ]
                }
            <response code="200">Update success</response>
            <response code="400">Failed to Update</response>
        </member>
        <member name="M:SupFAmof.API.Controllers.PostRegistrationController.GetUpdateRequestByAccountId(SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            This action method handles an HTTP GET request to retrieve a list of PostRgUpdateRequestResponse objects associated with a specific accountId.
            </summary>
            <param name="accountId">The id of the account for which to retrieve the PostRegistrationResponse objects.</param>
            <returns>
            - 200 OK: Returns a list of PostRgUpdateRequestResponse objects associated with the specified accountId.
            - 400 Bad Request: If there is an error while processing the request, an ErrorResponse is thrown and returned as a BadRequest.Including there is no Post Registration.
            </returns>
        </member>
        <member name="M:SupFAmof.API.Controllers.RoleController.GetRoles(SupFAmof.Service.DTO.Response.RoleResponse,SupFAmof.Service.DTO.Request.PagingRequest)">
            <summary>
            Get List Role
            </summary>    
        </member>
        <member name="M:SupFAmof.API.Controllers.RoleController.GetRoleById(System.Int32)">
            <summary>
            Get Role By Id                        
            </summary>
        </member>
    </members>
</doc>
